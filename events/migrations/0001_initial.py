# Generated by Django 5.2.1 on 2025-05-21 18:08

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('location', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=1)),
                ('is_latest', models.BooleanField(default=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurrence_pattern', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly'), ('custom', 'Custom')], max_length=20, null=True)),
                ('recurrence_end_date', models.DateTimeField(blank=True, null=True)),
                ('custom_recurrence', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_events', to=settings.AUTH_USER_MODEL)),
                ('parent_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recurring_instances', to='events.event')),
                ('parent_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='versions', to='events.event')),
                ('participants', models.ManyToManyField(blank=True, related_name='participating_events', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'events',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='EventChangeLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('change_type', models.CharField(choices=[('create', 'Created'), ('update', 'Updated'), ('delete', 'Deleted'), ('share', 'Shared'), ('rollback', 'Rolled Back')], max_length=20)),
                ('previous_data', models.JSONField(blank=True, null=True)),
                ('new_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changelogs', to='events.event')),
                ('new_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='new_versions', to='events.event')),
                ('old_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='old_versions', to='events.event')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_changes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'event_changelogs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventPermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('editor', 'Editor'), ('viewer', 'Viewer')], max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='events.event')),
                ('granted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='granted_permissions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_permissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'event_permissions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['start_date', 'end_date'], name='events_start_d_92ba55_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['created_by'], name='events_created_2c88fa_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['is_latest'], name='events_is_late_7fb766_idx'),
        ),
        migrations.AddIndex(
            model_name='eventchangelog',
            index=models.Index(fields=['event', '-created_at'], name='event_chang_event_i_570549_idx'),
        ),
        migrations.AddIndex(
            model_name='eventpermission',
            index=models.Index(fields=['event', 'user'], name='event_permi_event_i_6ca03d_idx'),
        ),
        migrations.AddIndex(
            model_name='eventpermission',
            index=models.Index(fields=['role'], name='event_permi_role_ab91fc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='eventpermission',
            unique_together={('event', 'user')},
        ),
    ]
